|I have not discussed the BSim language code in my program with anyone other than my instructor in this course.
|I have not used BSim language code obtained from another student, or any unauthorized source, either modified or 
|unmodified.
|If any BSim language code or documentation used in my program was obtained from another source, 
|such as a text book or course notes, that has been clearly noted with a proper citation in the comments of my 
|program.

||PROBLEM 1||

.include beta.uasm

| take two numbers and divide it by int L (determines the number of data/ints) 
.macro MEAN(RA, RB, L, RC) {
ADD(RA, RB, RC) 
DIVC(RC, L, RC) 
}

LD(X, R0) 
LD(Y, R1) 
LD(Z, R2) 

|compute avg. of two numbers and store to R8
MEAN(R0, R1, 2, R8) 
|multiply answer back by 2
MULC(R8, 2, R9) 
|compute avg. of 3 numbers and store to R10
MEAN(R2, R9, 3, R10)

. = 0x200
X: LONG(1) 
Y: LONG(3) 
Z: LONG(5)
A: LONG(R3) 
B: LONG(R5) 

||PROBLEM 2||

.include beta.uasm

LD(N, R0) |ARR ITERATOR
CMOVE(A, R1) |ARR POINTER

|square function
.macro POW2(RI, RO) {
MUL(RI, RI, RO) 
} 

|loop to square all elements in array
sqElems: 
	BF(0, brk) 
	LD(R1, 0, R2) 
	POW2(R2, R2) 
	ST(R2, 0x000, R1) 
	ADDC(R1, 4, R1) 
	SUBC(R0, 1, R0) 
	CALL(sqElems)  
brk: 
	HALT()

. = 0x200
N: LONG(5) 
A: LONG(3) 
LONG(5) 
LONG(12)
LONG(14)
LONG(1)

||PROBLEM 3||

.include beta.uasm

LD(N, R0) | ITERATOR
CMOVE(X, R1) | ARR PTR
LD(R1, 0, R2) | STORE X0 IN R2
ADDC(R1, 4, R1) | INCREMENT
LD(R1, 0, R3) | STORE X1 IN R3
SUB(R0, 2, R0) | DECREMENT BY 2

fibo: 
	BF(R0, fin)
	ADD(R2, R3, R4) | ADD FIRST 2 NUMS
	ADDC(R1, 4, R1) | INCREMENT PTR
	ST(R4, 0x000, R1) | STORE SUM TO LOC. INDICATED AT R1
	MOVE(R3, R2) | R2'S VALUE IS NOW R3
	MOVE(R4, R3) | R3'S VALUE IS NOW R4 (ADD LAST 2 NUMS TO GET NEXT FIBO NUM) 
	SUBC(R0, 1, R0) |DECREMENT
	CALL(fibo) 

fin: 
	HALT()

. = 0x400
N: LONG(5)
X: LONG(1)
LONG(1)